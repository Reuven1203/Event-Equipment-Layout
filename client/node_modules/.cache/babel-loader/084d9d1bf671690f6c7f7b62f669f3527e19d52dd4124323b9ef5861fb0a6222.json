{"ast":null,"code":"var _jsxFileName = \"/Users/reuvenostrofsky/Downloads/sound-system/src/Components/EquipmentComponent.tsx\";\nimport React from 'react';\nimport { ReactComponent as Speaker } from './SVG Files/Speaker + stand.svg';\nimport { ReactComponent as Booth } from './SVG Files/Booth.svg';\nimport { ReactComponent as SpeakerWithBass } from './SVG Files/Speaker + bass.svg';\nimport { ReactComponent as MovingHead } from './SVG Files/Moving head.svg';\nimport { ReactComponent as Gigbar } from './SVG Files/Gigbar with stand.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Equipment = [{\n  component: \"Speaker\",\n  svgHeightToWidthRatio: 3,\n  width: 120\n}, {\n  component: \"Booth\",\n  svgHeightToWidthRatio: 1.23,\n  width: 340\n}, {\n  component: \"SpeakerWithBass\",\n  svgHeightToWidthRatio: 0.3,\n  width: 140\n}, {\n  component: \"MovingHead\",\n  svgHeightToWidthRatio: 0.15,\n  width: 80\n}];\nconst EquipmentComponent = props => {\n  if (props.width && props.height) {\n    throw new Error(\"width and height props are mutually exclusive\");\n  } else if (!props.width && !props.height) {\n    throw new Error(\"width or height props must be passed\");\n  }\n  const mapStringToComponent = component => {\n    const equipmentEntry = Equipment.find(equipment => equipment.component === component);\n    const ratio = equipmentEntry === null || equipmentEntry === void 0 ? void 0 : equipmentEntry.svgHeightToWidthRatio;\n    if (!equipmentEntry) {\n      return /*#__PURE__*/_jsxDEV(Booth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 20\n      }, this);\n    } else {\n      const ratio = equipmentEntry.svgHeightToWidthRatio;\n      switch (component) {\n        case \"Booth\":\n          return /*#__PURE__*/_jsxDEV(Booth, {\n            width: props.width ? props.width : props.height ? props.height * ratio : equipmentEntry.width\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 28\n          }, this);\n        case \"SpeakerWithBass\":\n          return /*#__PURE__*/_jsxDEV(SpeakerWithBass, {\n            width: props.width\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 28\n          }, this);\n        case \"MovingHead\":\n          return /*#__PURE__*/_jsxDEV(MovingHead, {\n            width: props.width\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 28\n          }, this);\n        case \"Gigbar\":\n          return /*#__PURE__*/_jsxDEV(Gigbar, {\n            width: props.width\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this);\n        case \"Speaker\":\n          return /*#__PURE__*/_jsxDEV(Speaker, {\n            width: props.width\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 28\n          }, this);\n        default:\n          return /*#__PURE__*/_jsxDEV(Booth, {\n            width: props.width\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 28\n          }, this);\n      }\n    }\n  };\n\n  // }\n\n  return mapStringToComponent(props.component);\n};\n_c = EquipmentComponent;\nexport default EquipmentComponent;\nvar _c;\n$RefreshReg$(_c, \"EquipmentComponent\");","map":{"version":3,"names":["React","ReactComponent","Speaker","Booth","SpeakerWithBass","MovingHead","Gigbar","jsxDEV","_jsxDEV","Equipment","component","svgHeightToWidthRatio","width","EquipmentComponent","props","height","Error","mapStringToComponent","equipmentEntry","find","equipment","ratio","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reuvenostrofsky/Downloads/sound-system/src/Components/EquipmentComponent.tsx"],"sourcesContent":["import React from 'react';\nimport {ReactComponent as Speaker} from './SVG Files/Speaker + stand.svg';\nimport {ReactComponent as Booth} from './SVG Files/Booth.svg';\nimport {ReactComponent as SpeakerWithBass} from './SVG Files/Speaker + bass.svg';\nimport {ReactComponent as MovingHead} from './SVG Files/Moving head.svg';\nimport {ReactComponent as Gigbar} from './SVG Files/Gigbar with stand.svg';\n\nimport { FC } from 'react';\n\ntype allowedStrings =  \"Booth\" | 'SpeakerWithBass' | \"MovingHead\" | \"Gigbar\" | 'Speaker';\ninterface EquipmentType {\n    component: allowedStrings;\n    svgHeightToWidthRatio: number;\n    width?: number;\n    height?: number;\n}\n\nconst Equipment: EquipmentType[] = [\n    {\n        component: \"Speaker\",\n        svgHeightToWidthRatio: 3,\n        width: 120,\n\n    },\n    {\n        component: \"Booth\",\n        svgHeightToWidthRatio: 1.23,\n        width:340,\n    },\n    {\n        component: \"SpeakerWithBass\",\n        svgHeightToWidthRatio: 0.3,\n        width: 140,\n    },\n    {\n        component: \"MovingHead\",\n        svgHeightToWidthRatio: 0.15,\n        width: 80,\n\n    }]\n\n\n\n\nconst EquipmentComponent:FC<{component: allowedStrings, width?: number, height?:number}> = (props) => {\n    if(props.width && props.height) {\n        throw new Error(\"width and height props are mutually exclusive\");\n    }else if(!props.width && !props.height) {\n        throw new Error(\"width or height props must be passed\");\n    }\n    const mapStringToComponent = (component: string) => {\n        const equipmentEntry = Equipment.find((equipment) => equipment.component === component);\n        const ratio = equipmentEntry?.svgHeightToWidthRatio;\n        if(!equipmentEntry) {\n            return <Booth  />;\n        }else {\n            const ratio = equipmentEntry.svgHeightToWidthRatio;\n            switch (component) {\n                case \"Booth\":\n                    return <Booth width={props.width ? props.width : props.height ? props.height * ratio : equipmentEntry.width } />;\n                case \"SpeakerWithBass\":\n                    return <SpeakerWithBass width={props.width} />;\n                case \"MovingHead\":\n                    return <MovingHead width={props.width} />;\n                case \"Gigbar\":\n                    return <Gigbar width={props.width} />;\n                case \"Speaker\":\n                    return <Speaker width={props.width} />;\n                default:\n                    return <Booth width={props.width} />;\n            }\n        }\n\n    }\n\n    // }\n\n    return (\n      mapStringToComponent(props.component)\n    )\n\n\n    }\n\nexport default EquipmentComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}