{"ast":null,"code":"var _jsxFileName = \"/Users/reuvenostrofsky/Downloads/sound-system/src/Contexts/FormContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useFormik } from 'formik';\nimport { createContext, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContext = /*#__PURE__*/createContext({});\nexport const useForm = () => {\n  _s();\n  const context = useContext(FormContext);\n  if (!context) {\n    throw new Error('useForm must be used within a FormProvider');\n  }\n  return context;\n};\n_s(useForm, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const FormProvider = ({\n  children\n}) => {\n  _s2();\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      phone: '',\n      date: '',\n      type: '',\n      location: '',\n      guestRange: [250, 500],\n      package: selectedPackage\n    },\n    initialErrors: {\n      name: 'Name is required',\n      email: 'Email is required',\n      phone: 'Phone is required',\n      date: 'Date is required',\n      type: 'Type is required',\n      location: 'Location is required'\n    },\n    onSubmit: values => {\n      console.log(values);\n    },\n    validate: values => {\n      const errors = {};\n      if (!values.name) {\n        errors.name = \"Name is required\";\n      }\n      if (!values.email) {\n        errors.email = \"Email is required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Invalid email format\";\n      }\n      if (!values.phone) {\n        errors.phone = \"Phone is required\";\n      }\n      if (!values.date) {\n        errors.date = \"Date is required\";\n      }\n      if (!values.type) {\n        errors.type = \"Type is required\";\n      }\n      if (!values.location) {\n        errors.location = \"Location is required\";\n      }\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: {\n      formik\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s2(FormProvider, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = FormProvider;\nexport default FormContext;\nvar _c;\n$RefreshReg$(_c, \"FormProvider\");","map":{"version":3,"names":["useFormik","createContext","useContext","jsxDEV","_jsxDEV","FormContext","useForm","_s","context","Error","FormProvider","children","_s2","formik","initialValues","name","email","phone","date","type","location","guestRange","package","selectedPackage","initialErrors","onSubmit","values","console","log","validate","errors","test","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reuvenostrofsky/Downloads/sound-system/src/Contexts/FormContext.tsx"],"sourcesContent":["import {useFormik} from 'formik';\nimport {createContext, useContext} from 'react';\n\ninterface FormContextData {\n    formik: any;\n}\n\n\nconst FormContext = createContext<FormContextData>({} as FormContextData);\n\nexport const useForm = () => {\n    const context = useContext(FormContext);\n    if (!context) {\n        throw new Error('useForm must be used within a FormProvider');\n    }\n    return context;\n}\n\ninterface FormProviderProps {\n    children?: React.ReactNode;\n}\n\nexport const FormProvider = ({children}: FormProviderProps) => {\n    const formik = useFormik({\n        initialValues: {\n            name: '',\n            email: '',\n            phone: '',\n            date: '',\n            type: '',\n            location: '',\n            guestRange: [250,500],\n            package: selectedPackage,\n\n\n        },\n        initialErrors: {\n            name: 'Name is required',\n            email: 'Email is required',\n            phone: 'Phone is required',\n            date: 'Date is required',\n            type: 'Type is required',\n            location: 'Location is required'\n        },\n        onSubmit: values => {\n            console.log(values);\n        },\n        validate: values => {\n            const errors: {\n                name?: string,\n                email?: string,\n                phone?: string,\n                date?: string,\n                type?: string,\n                location?: string\n            } = {\n            };\n            if (!values.name) {\n                errors.name = \"Name is required\";\n            }\n            if (!values.email) {\n                errors.email = \"Email is required\";\n            } else if (\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n            ) {\n                errors.email = \"Invalid email format\";\n            }\n            if (!values.phone) {\n                errors.phone = \"Phone is required\";\n            }\n            if (!values.date) {\n                errors.date = \"Date is required\";\n            }\n            if (!values.type) {\n                errors.type = \"Type is required\";\n            }\n            if (!values.location) {\n                errors.location = \"Location is required\";\n            }\n            return errors;\n        }\n    })\n\n    return (\n        <FormContext.Provider value={{formik}}>\n            {children}\n        </FormContext.Provider>\n    );\n}\n\nexport default FormContext;"],"mappings":";;;AAAA,SAAQA,SAAS,QAAO,QAAQ;AAChC,SAAQC,aAAa,EAAEC,UAAU,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOhD,MAAMC,WAAW,gBAAGJ,aAAa,CAAkB,CAAC,CAAoB,CAAC;AAEzE,OAAO,MAAMK,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,OAAO,GAAGN,UAAU,CAACG,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EACjE;EACA,OAAOD,OAAO;AAClB,CAAC;AAAAD,EAAA,CANYD,OAAO;AAYpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAACC;AAA2B,CAAC,KAAK;EAAAC,GAAA;EAC3D,MAAMC,MAAM,GAAGb,SAAS,CAAC;IACrBc,aAAa,EAAE;MACXC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,CAAC,GAAG,EAAC,GAAG,CAAC;MACrBC,OAAO,EAAEC;IAGb,CAAC;IACDC,aAAa,EAAE;MACXT,IAAI,EAAE,kBAAkB;MACxBC,KAAK,EAAE,mBAAmB;MAC1BC,KAAK,EAAE,mBAAmB;MAC1BC,IAAI,EAAE,kBAAkB;MACxBC,IAAI,EAAE,kBAAkB;MACxBC,QAAQ,EAAE;IACd,CAAC;IACDK,QAAQ,EAAEC,MAAM,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACvB,CAAC;IACDG,QAAQ,EAAEH,MAAM,IAAI;MAChB,MAAMI,MAOL,GAAG,CACJ,CAAC;MACD,IAAI,CAACJ,MAAM,CAACX,IAAI,EAAE;QACde,MAAM,CAACf,IAAI,GAAG,kBAAkB;MACpC;MACA,IAAI,CAACW,MAAM,CAACV,KAAK,EAAE;QACfc,MAAM,CAACd,KAAK,GAAG,mBAAmB;MACtC,CAAC,MAAM,IACH,CAAC,2CAA2C,CAACe,IAAI,CAACL,MAAM,CAACV,KAAK,CAAC,EACjE;QACEc,MAAM,CAACd,KAAK,GAAG,sBAAsB;MACzC;MACA,IAAI,CAACU,MAAM,CAACT,KAAK,EAAE;QACfa,MAAM,CAACb,KAAK,GAAG,mBAAmB;MACtC;MACA,IAAI,CAACS,MAAM,CAACR,IAAI,EAAE;QACdY,MAAM,CAACZ,IAAI,GAAG,kBAAkB;MACpC;MACA,IAAI,CAACQ,MAAM,CAACP,IAAI,EAAE;QACdW,MAAM,CAACX,IAAI,GAAG,kBAAkB;MACpC;MACA,IAAI,CAACO,MAAM,CAACN,QAAQ,EAAE;QAClBU,MAAM,CAACV,QAAQ,GAAG,sBAAsB;MAC5C;MACA,OAAOU,MAAM;IACjB;EACJ,CAAC,CAAC;EAEF,oBACI1B,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAACpB;IAAM,CAAE;IAAAF,QAAA,EACjCA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAzB,GAAA,CAlEYF,YAAY;EAAA,QACNV,SAAS;AAAA;AAAAsC,EAAA,GADf5B,YAAY;AAoEzB,eAAeL,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}