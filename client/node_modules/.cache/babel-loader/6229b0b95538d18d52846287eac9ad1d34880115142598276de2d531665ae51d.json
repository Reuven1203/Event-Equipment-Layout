{"ast":null,"code":"var _jsxFileName = \"/Users/reuvenostrofsky/Downloads/sound-system/src/Components/CustomizableSelector/index.tsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport { FormControlLabel, Checkbox, Rating } from '@mui/material';\nimport { SpeakerGroup } from '@mui/icons-material';\n\n// Action types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  Speaker: {\n    checked: true,\n    quantity: 1\n  },\n  Bass: {\n    checked: false,\n    quantity: 0\n  }\n};\nconst reducer = (state, action) => {\n  var _action$payload$quant;\n  switch (action.type) {\n    case 'TOGGLE_CHECK':\n      return {\n        ...state,\n        [action.payload.name]: {\n          ...state[action.payload.name],\n          checked: !state[action.payload.name].checked\n        }\n      };\n    case 'SET_QUANTITY':\n      return {\n        ...state,\n        [action.payload.name]: {\n          ...state[action.payload.name],\n          quantity: (_action$payload$quant = action.payload.quantity) !== null && _action$payload$quant !== void 0 ? _action$payload$quant : 0\n        }\n      };\n    default:\n      return state;\n  }\n};\nconst CustomizableSelector = props => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const equipmentList = [{\n    id: 0,\n    name: 'Speaker',\n    icon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {\n      sx: {\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }, this),\n    emptyIcon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 20\n    }, this),\n    min: 1,\n    max: 3\n  }, {\n    id: 1,\n    name: 'Bass',\n    icon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {\n      sx: {\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this),\n    emptyIcon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {\n      sx: {\n        color: 'yellow'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 24\n    }, this),\n    min: 0\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${props.isSelected ? 'sm:animate-expand' : 'sm:animate-shrink'} sm:h-[350px] h-[300px]  bg-[#2E49A6] text-white  shadow-2xl border-2 border-[#2E49A6] sm:cursor-pointer max-sm:w-[80%] w-[300px] relative `,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: 'text-[30px] w-full text-center p-2',\n      children: \"Customize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'p-3 flex-col',\n      children: equipmentList.map(equipment => {\n        var _state$equipment$name;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'flex items-center',\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: ((_state$equipment$name = state[equipment.name]) === null || _state$equipment$name === void 0 ? void 0 : _state$equipment$name.checked) || false,\n              onChange: () => dispatch({\n                type: 'TOGGLE_CHECK',\n                payload: {\n                  name: equipment.name\n                }\n              }),\n              sx: {\n                color: 'white',\n                '&.Mui-checked': {\n                  color: 'white'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 57\n            }, this),\n            name: equipment.name,\n            id: equipment.name,\n            label: equipment.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: state[equipment.name].quantity,\n              onChange: (event, newValue) => dispatch({\n                type: 'SET_QUANTITY',\n                payload: {\n                  name: equipment.name,\n                  quantity: newValue\n                }\n              }),\n              name: equipment.name,\n              max: equipment.max,\n              icon: equipment.icon,\n              emptyIcon: equipment.emptyIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)]\n        }, equipment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomizableSelector, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = CustomizableSelector;\nexport default CustomizableSelector;\nvar _c;\n$RefreshReg$(_c, \"CustomizableSelector\");","map":{"version":3,"names":["useReducer","FormControlLabel","Checkbox","Rating","SpeakerGroup","jsxDEV","_jsxDEV","initialState","Speaker","checked","quantity","Bass","reducer","state","action","_action$payload$quant","type","payload","name","CustomizableSelector","props","_s","dispatch","equipmentList","id","icon","sx","color","fileName","_jsxFileName","lineNumber","columnNumber","emptyIcon","min","max","className","isSelected","children","map","equipment","_state$equipment$name","control","onChange","label","value","event","newValue","_c","$RefreshReg$"],"sources":["/Users/reuvenostrofsky/Downloads/sound-system/src/Components/CustomizableSelector/index.tsx"],"sourcesContent":["import {FC, useEffect,useReducer} from 'react';\nimport {FormControlLabel,Checkbox, Rating} from '@mui/material';\nimport {Speaker,SpeakerGroup} from '@mui/icons-material';\n\ninterface EquipmentState {\n    checked: boolean;\n    quantity: number;\n}\n\ntype State = {\n    [equipmentName: string]: EquipmentState;\n};\n\n// Action types\ninterface ToggleCheckAction {\n    type: 'TOGGLE_CHECK';\n    payload: {\n        name: string;\n    };\n}\n\ninterface SetQuantityAction {\n    type: 'SET_QUANTITY';\n    payload: {\n        name: string;\n        quantity: number | null;\n    };\n}\n\ntype Action = ToggleCheckAction | SetQuantityAction;\n\nconst initialState = {\n    Speaker: {\n        checked: true,\n        quantity: 1,\n    },\n    Bass: {\n        checked: false,\n        quantity: 0,\n    }\n};\n\nconst reducer = (state: State, action: Action) => {\n    switch (action.type) {\n        case 'TOGGLE_CHECK':\n            return {\n                ...state,\n                [action.payload.name]: {\n                    ...state[action.payload.name],\n                    checked: !state[action.payload.name].checked,\n                },\n            };\n        case 'SET_QUANTITY':\n            return {\n                ...state,\n                [action.payload.name]: {\n                    ...state[action.payload.name],\n                    quantity: action.payload.quantity ?? 0,\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nconst CustomizableSelector:FC<{isSelected:boolean}> = (props) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const equipmentList = [{\n        id: 0,\n        name: 'Speaker',\n        icon: <SpeakerGroup sx={{color:'white'}}/>,\n        emptyIcon: <SpeakerGroup/>,\n        min: 1,\n        max:3,\n    },\n        {\n            id: 1,\n            name: 'Bass',\n            icon: <SpeakerGroup sx={{color:'white'}}/>,\n            emptyIcon: <SpeakerGroup sx={{color:'yellow'}}/>,\n            min: 0,\n\n        },\n    ];\n\n    return (\n        <div className={`${props.isSelected ? 'sm:animate-expand' : 'sm:animate-shrink'} sm:h-[350px] h-[300px]  bg-[#2E49A6] text-white  shadow-2xl border-2 border-[#2E49A6] sm:cursor-pointer max-sm:w-[80%] w-[300px] relative `}>\n            <h1 className={'text-[30px] w-full text-center p-2'}>Customize</h1>\n            <div className={'p-3 flex-col'}>\n                {equipmentList.map((equipment) => {\n                    return (\n                        <div key={equipment.id} className={'flex items-center'}>\n                            <FormControlLabel  control={<Checkbox  checked={state[equipment.name]?.checked || false} onChange={() => dispatch({ type: 'TOGGLE_CHECK', payload: { name: equipment.name } })} sx={{\n                                color: 'white',\n                                '&.Mui-checked': {\n                                    color: 'white',\n                                },\n                            }}/>} name={equipment.name} id={equipment.name} label={equipment.name} />\n                            <div>\n                                <Rating value={state[equipment.name].quantity} onChange={(event, newValue) => dispatch({ type: 'SET_QUANTITY', payload: { name: equipment.name, quantity: newValue } })} name={equipment.name} max={equipment.max} icon={equipment.icon} emptyIcon={equipment.emptyIcon}   />\n                            </div>\n                        </div>\n                    )\n                }\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default CustomizableSelector;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}