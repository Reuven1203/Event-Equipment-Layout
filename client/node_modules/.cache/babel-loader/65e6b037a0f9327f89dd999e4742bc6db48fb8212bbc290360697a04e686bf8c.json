{"ast":null,"code":"var _jsxFileName = \"/Users/reuvenostrofsky/Downloads/sound-system/src/Components/CustomizableSelector/index.tsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport { SpeakerGroup, Light } from '@mui/icons-material';\n\n// Action types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  0: {\n    checked: true,\n    quantity: 1\n  },\n  1: {\n    checked: false,\n    quantity: 0\n  },\n  MovingHead: {\n    checked: false,\n    quantity: 0\n  }\n};\nconst reducer = (state, action) => {\n  var _action$payload$quant;\n  switch (action.type) {\n    case 'TOGGLE_CHECK':\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          checked: !state[action.payload.id].checked\n        }\n      };\n    case 'SET_QUANTITY':\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          quantity: (_action$payload$quant = action.payload.quantity) !== null && _action$payload$quant !== void 0 ? _action$payload$quant : 0\n        }\n      };\n    default:\n      return state;\n  }\n};\nconst CustomizableSelector = props => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const equipmentList = [{\n    id: 0,\n    name: 'Speaker',\n    icon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {\n      sx: {\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }, this),\n    emptyIcon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 20\n    }, this),\n    min: 1,\n    max: 3\n  }, {\n    id: 1,\n    name: 'Bass',\n    icon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {\n      sx: {\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }, this),\n    emptyIcon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 24\n    }, this),\n    min: 0,\n    max: state.Speaker.quantity\n  }, {\n    id: 2,\n    name: 'Moving Head',\n    icon: /*#__PURE__*/_jsxDEV(Light, {\n      sx: {\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this),\n    emptyIcon: /*#__PURE__*/_jsxDEV(Light, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 24\n    }, this),\n    min: 0,\n    max: 6\n  }];\n  const handleCheckboxChange = equipmentId => event => {\n    dispatch({\n      type: 'TOGGLE_CHECK',\n      payload: {\n        id: equipmentId\n      }\n    });\n  };\n  const handleRatingChange = equipmentId => (event, newValue) => {\n    let finalValue = newValue;\n    if (equipmentId === 0 && (!newValue || newValue < 1)) {\n      // Assuming the Speaker has id 0\n      finalValue = 1;\n    }\n    dispatch({\n      type: 'SET_QUANTITY',\n      payload: {\n        id: equipmentId,\n        quantity: finalValue\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${props.isSelected ? 'sm:animate-expand' : 'sm:animate-shrink'} sm:h-[350px] h-[300px]  bg-[#2E49A6] text-white  shadow-2xl border-2 border-[#2E49A6] sm:cursor-pointer max-sm:w-[80%] w-[300px] relative `,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: 'text-[30px] w-full text-center p-2',\n      children: \"Customize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'p-3 flex-col'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomizableSelector, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = CustomizableSelector;\nexport default CustomizableSelector;\nvar _c;\n$RefreshReg$(_c, \"CustomizableSelector\");","map":{"version":3,"names":["useReducer","SpeakerGroup","Light","jsxDEV","_jsxDEV","initialState","checked","quantity","MovingHead","reducer","state","action","_action$payload$quant","type","payload","id","CustomizableSelector","props","_s","dispatch","equipmentList","name","icon","sx","color","fileName","_jsxFileName","lineNumber","columnNumber","emptyIcon","min","max","Speaker","handleCheckboxChange","equipmentId","event","handleRatingChange","newValue","finalValue","className","isSelected","children","_c","$RefreshReg$"],"sources":["/Users/reuvenostrofsky/Downloads/sound-system/src/Components/CustomizableSelector/index.tsx"],"sourcesContent":["import {FC, useEffect,useReducer} from 'react';\nimport {FormControlLabel,Checkbox, Rating} from '@mui/material';\nimport {Speaker,SpeakerGroup, Light} from '@mui/icons-material';\nimport {calculateNewValue} from '@testing-library/user-event/dist/utils';\n\ninterface EquipmentState {\n    checked: boolean;\n    quantity: number;\n}\n\ntype State = {\n    [equipmentName: string]: EquipmentState;\n};\n\n// Action types\ninterface ToggleCheckAction {\n    type: 'TOGGLE_CHECK';\n    payload: {\n        id: number;\n    };\n}\n\ninterface SetQuantityAction {\n    type: 'SET_QUANTITY';\n    payload: {\n        id: number;\n        quantity: number | null;\n    };\n}\n\n\ntype Action = ToggleCheckAction | SetQuantityAction;\n\nconst initialState = {\n    0: {\n        checked: true,\n        quantity: 1,\n    },\n    1: {\n        checked: false,\n        quantity: 0,\n    },\n    MovingHead: {\n        checked: false,\n        quantity: 0,\n    }\n};\n\nconst reducer = (state: State, action: Action) => {\n    switch (action.type) {\n        case 'TOGGLE_CHECK':\n            return {\n                ...state,\n                [action.payload.id]: {\n                    ...state[action.payload.id],\n                    checked: !state[action.payload.id].checked,\n                },\n            };\n        case 'SET_QUANTITY':\n            return {\n                ...state,\n                [action.payload.id]: {\n                    ...state[action.payload.id],\n                    quantity: action.payload.quantity ?? 0,\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nconst CustomizableSelector:FC<{isSelected:boolean}> = (props) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    const equipmentList = [{\n        id: 0,\n        name: 'Speaker',\n        icon: <SpeakerGroup sx={{color:'white'}}/>,\n        emptyIcon: <SpeakerGroup/>,\n        min: 1,\n        max:3,\n    },\n        {\n            id: 1,\n            name: 'Bass',\n            icon: <SpeakerGroup sx={{color:'white'}}/>,\n            emptyIcon: <SpeakerGroup/>,\n            min: 0,\n            max: state.Speaker.quantity\n\n        },\n        {\n            id: 2,\n            name: 'Moving Head',\n            icon: <Light sx={{color:'white'}}/>,\n            emptyIcon: <Light/>,\n            min: 0,\n            max: 6\n\n\n        }\n    ];\n\n    const handleCheckboxChange = (equipmentId: number) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        dispatch({\n            type: 'TOGGLE_CHECK',\n            payload: {\n                id: equipmentId\n            },\n        });\n    };\n\n    const handleRatingChange = (equipmentId: number) => (event: any, newValue: number | null) => {\n        let finalValue = newValue;\n\n        if (equipmentId === 0 && (!newValue || newValue < 1)) {  // Assuming the Speaker has id 0\n            finalValue = 1;\n        }\n\n        dispatch({\n            type: 'SET_QUANTITY',\n            payload: {\n                id: equipmentId,\n                quantity: finalValue,\n            },\n        });\n    };\n\n\n    return (\n        <div className={`${props.isSelected ? 'sm:animate-expand' : 'sm:animate-shrink'} sm:h-[350px] h-[300px]  bg-[#2E49A6] text-white  shadow-2xl border-2 border-[#2E49A6] sm:cursor-pointer max-sm:w-[80%] w-[300px] relative `}>\n            <h1 className={'text-[30px] w-full text-center p-2'}>Customize</h1>\n            <div className={'p-3 flex-col'}>\n                \n            </div>\n        </div>\n    );\n};\n\nexport default CustomizableSelector;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}