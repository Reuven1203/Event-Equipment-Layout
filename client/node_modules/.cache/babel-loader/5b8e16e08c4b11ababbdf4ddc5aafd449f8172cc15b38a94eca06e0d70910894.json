{"ast":null,"code":"var _jsxFileName = \"/Users/reuvenostrofsky/Downloads/sound-system/src/Components/CustomizableSelector/index.tsx\";\nimport Card from '../PackageSelector/Card';\n\n// Action types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  0: {\n    checked: true,\n    quantity: 1\n  },\n  1: {\n    checked: false,\n    quantity: 0\n  },\n  2: {\n    checked: false,\n    quantity: 0\n  },\n  3: {\n    checked: false,\n    quantity: 0\n  }\n};\nconst reducer = (state, action) => {\n  var _action$payload$quant;\n  switch (action.type) {\n    case 'TOGGLE_CHECK':\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          checked: !state[action.payload.id].checked,\n          quantity: 1\n        }\n      };\n    case 'SET_QUANTITY':\n      return {\n        ...state,\n        [action.payload.id]: {\n          ...state[action.payload.id],\n          checked: true,\n          quantity: (_action$payload$quant = action.payload.quantity) !== null && _action$payload$quant !== void 0 ? _action$payload$quant : 0\n        }\n      };\n    default:\n      return state;\n  }\n};\nconst CustomizableSelector = props => {\n  const onClickHandler = () => {\n    props.onClick(100);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isSelected: props.isSelected,\n    onClick: onClickHandler,\n    isCustomize: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 8\n  }, this);\n};\n_c = CustomizableSelector;\nexport default CustomizableSelector;\nvar _c;\n$RefreshReg$(_c, \"CustomizableSelector\");","map":{"version":3,"names":["Card","jsxDEV","_jsxDEV","initialState","checked","quantity","reducer","state","action","_action$payload$quant","type","payload","id","CustomizableSelector","props","onClickHandler","onClick","isSelected","isCustomize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reuvenostrofsky/Downloads/sound-system/src/Components/CustomizableSelector/index.tsx"],"sourcesContent":["import {FC, useEffect,useReducer} from 'react';\nimport {FormControlLabel,Checkbox, Rating} from '@mui/material';\nimport {Speaker,SpeakerGroup, Light, Fluorescent} from '@mui/icons-material';\nimport {calculateNewValue} from '@testing-library/user-event/dist/utils';\nimport Card from '../PackageSelector/Card';\n\ninterface EquipmentState {\n    checked: boolean;\n    quantity: number;\n}\n\ntype State = {\n    [equipmentName: string]: EquipmentState;\n};\n\n// Action types\ninterface ToggleCheckAction {\n    type: 'TOGGLE_CHECK';\n    payload: {\n        id: number;\n    };\n}\n\ninterface SetQuantityAction {\n    type: 'SET_QUANTITY';\n    payload: {\n        id: number;\n        quantity: number | null;\n    };\n}\n\n\ntype Action = ToggleCheckAction | SetQuantityAction;\n\nconst initialState = {\n    0: {\n        checked: true,\n        quantity: 1,\n    },\n    1: {\n        checked: false,\n        quantity: 0,\n    },\n    2: {\n        checked: false,\n        quantity: 0,\n    },\n    3: {\n        checked: false,\n        quantity: 0,\n    }\n};\n\nconst reducer = (state: State, action: Action) => {\n    switch (action.type) {\n        case 'TOGGLE_CHECK':\n            return {\n                ...state,\n                [action.payload.id]: {\n                    ...state[action.payload.id],\n                    checked: !state[action.payload.id].checked,\n                    quantity:1\n                },\n            };\n        case 'SET_QUANTITY':\n            return {\n                ...state,\n                [action.payload.id]: {\n                    ...state[action.payload.id],\n                    checked: true,\n                    quantity: action.payload.quantity ?? 0,\n                },\n            };\n        default:\n            return state;\n    }\n};\n\nconst CustomizableSelector:FC<{isSelected:boolean, onClick: (index:number)=>void}> = (props) => {\n    const onClickHandler = () => {\n        props.onClick(100);\n    }\n    return (\n       <Card isSelected={props.isSelected} onClick={onClickHandler} isCustomize={true}>\n\n       </Card>\n    );\n};\n\nexport default CustomizableSelector;"],"mappings":";AAIA,OAAOA,IAAI,MAAM,yBAAyB;;AAW1C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAmBA,MAAMC,YAAY,GAAG;EACjB,CAAC,EAAE;IACCC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE;EACd,CAAC;EACD,CAAC,EAAE;IACCD,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE;EACd,CAAC;EACD,CAAC,EAAE;IACCD,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE;EACd,CAAC;EACD,CAAC,EAAE;IACCD,OAAO,EAAE,KAAK;IACdC,QAAQ,EAAE;EACd;AACJ,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAY,EAAEC,MAAc,KAAK;EAAA,IAAAC,qBAAA;EAC9C,QAAQD,MAAM,CAACE,IAAI;IACf,KAAK,cAAc;MACf,OAAO;QACH,GAAGH,KAAK;QACR,CAACC,MAAM,CAACG,OAAO,CAACC,EAAE,GAAG;UACjB,GAAGL,KAAK,CAACC,MAAM,CAACG,OAAO,CAACC,EAAE,CAAC;UAC3BR,OAAO,EAAE,CAACG,KAAK,CAACC,MAAM,CAACG,OAAO,CAACC,EAAE,CAAC,CAACR,OAAO;UAC1CC,QAAQ,EAAC;QACb;MACJ,CAAC;IACL,KAAK,cAAc;MACf,OAAO;QACH,GAAGE,KAAK;QACR,CAACC,MAAM,CAACG,OAAO,CAACC,EAAE,GAAG;UACjB,GAAGL,KAAK,CAACC,MAAM,CAACG,OAAO,CAACC,EAAE,CAAC;UAC3BR,OAAO,EAAE,IAAI;UACbC,QAAQ,GAAAI,qBAAA,GAAED,MAAM,CAACG,OAAO,CAACN,QAAQ,cAAAI,qBAAA,cAAAA,qBAAA,GAAI;QACzC;MACJ,CAAC;IACL;MACI,OAAOF,KAAK;EACpB;AACJ,CAAC;AAED,MAAMM,oBAA4E,GAAIC,KAAK,IAAK;EAC5F,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBD,KAAK,CAACE,OAAO,CAAC,GAAG,CAAC;EACtB,CAAC;EACD,oBACGd,OAAA,CAACF,IAAI;IAACiB,UAAU,EAAEH,KAAK,CAACG,UAAW;IAACD,OAAO,EAAED,cAAe;IAACG,WAAW,EAAE;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzE,CAAC;AAEd,CAAC;AAACC,EAAA,GATIV,oBAA4E;AAWlF,eAAeA,oBAAoB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}