{"ast":null,"code":"var _jsxFileName = \"/Users/reuvenostrofsky/Downloads/sound-system/src/Components/EquipmentComponent.tsx\";\nimport React from 'react';\nimport Speaker from './SVG Files/Speaker + stand.svg';\nimport Booth from './SVG Files/Booth.svg';\nimport SpeakerWithBass from './SVG Files/Speaker + stand + bass.svg';\nimport MovingHead from './SVG Files/Moving head.svg';\nimport Gigbar from './SVG Files/Gigbar.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EquipmentComponent = props => {\n  //have a switch statement that returns the correct svg based on the props.component\n  //return the correct svg\n  const eq = () => {\n    switch (props.component) {\n      case \"Speaker\":\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Speaker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 24\n        }, this);\n      case \"Booth\":\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Booth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 24\n        }, this);\n      case \"SpeakerWithBass\":\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: SpeakerWithBass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 24\n        }, this);\n      case \"MovingHead\":\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: MovingHead\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 24\n        }, this);\n      case \"Gigbar\":\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Gigbar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 24\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Speaker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: eq\n  }, void 0, false);\n};\n_c = EquipmentComponent;\nexport default EquipmentComponent;\nvar _c;\n$RefreshReg$(_c, \"EquipmentComponent\");","map":{"version":3,"names":["React","Speaker","Booth","SpeakerWithBass","MovingHead","Gigbar","jsxDEV","_jsxDEV","Fragment","_Fragment","EquipmentComponent","props","eq","component","src","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/Users/reuvenostrofsky/Downloads/sound-system/src/Components/EquipmentComponent.tsx"],"sourcesContent":["import React from 'react';\nimport Speaker from './SVG Files/Speaker + stand.svg';\nimport Booth from './SVG Files/Booth.svg';\nimport SpeakerWithBass from './SVG Files/Speaker + stand + bass.svg';\nimport MovingHead from './SVG Files/Moving head.svg';\nimport Gigbar from './SVG Files/Gigbar.svg';\n\nimport { FC } from 'react';\n\ntype allowedStrings = \"Speaker\" | \"Booth\" | 'SpeakerWithBass' | \"MovingHead\" | \"Gigbar\";\n\n\nconst EquipmentComponent:FC<{component: allowedStrings}> = (props) => {\n    //have a switch statement that returns the correct svg based on the props.component\n    //return the correct svg\n    const eq = () => {\n        switch(props.component){\n            case \"Speaker\":\n                return <img src={Speaker}/>\n            case \"Booth\":\n                return <img src={Booth}/>\n            case \"SpeakerWithBass\":\n                return <img src={SpeakerWithBass}/>\n            case \"MovingHead\":\n                return <img src={MovingHead}/>\n            case \"Gigbar\":\n                return <img src={Gigbar}/>\n            default:\n                return <img src={Speaker}/>\n        }\n    }\n\n    return (\n        <>\n            {eq}\n        </>\n    );\n};\n\nexport default EquipmentComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,iCAAiC;AACrD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,eAAe,MAAM,wCAAwC;AACpE,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAO5C,MAAMC,kBAAkD,GAAIC,KAAK,IAAK;EAClE;EACA;EACA,MAAMC,EAAE,GAAGA,CAAA,KAAM;IACb,QAAOD,KAAK,CAACE,SAAS;MAClB,KAAK,SAAS;QACV,oBAAON,OAAA;UAAKO,GAAG,EAAEb;QAAQ;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAC/B,KAAK,OAAO;QACR,oBAAOX,OAAA;UAAKO,GAAG,EAAEZ;QAAM;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAC7B,KAAK,iBAAiB;QAClB,oBAAOX,OAAA;UAAKO,GAAG,EAAEX;QAAgB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MACvC,KAAK,YAAY;QACb,oBAAOX,OAAA;UAAKO,GAAG,EAAEV;QAAW;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAClC,KAAK,QAAQ;QACT,oBAAOX,OAAA;UAAKO,GAAG,EAAET;QAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAC9B;QACI,oBAAOX,OAAA;UAAKO,GAAG,EAAEb;QAAQ;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;IACnC;EACJ,CAAC;EAED,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACKP;EAAE,gBACL,CAAC;AAEX,CAAC;AAACQ,EAAA,GAzBIV,kBAAkD;AA2BxD,eAAeA,kBAAkB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}