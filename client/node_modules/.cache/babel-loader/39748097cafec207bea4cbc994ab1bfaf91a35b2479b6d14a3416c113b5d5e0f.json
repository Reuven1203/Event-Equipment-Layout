{"ast":null,"code":"var _jsxFileName = \"/Users/reuvenostrofsky/Downloads/sound-system/src/Components/EquipmentComponent.tsx\";\nimport React from 'react';\nimport Speaker from './SVG Files/Speaker + stand.svg';\nimport Booth from './SVG Files/Booth.svg';\nimport SpeakerWithBass from './SVG Files/Speaker + bass.svg';\nimport MovingHead from './SVG Files/Moving head.svg';\nimport Gigbar from './SVG Files/Gigbar with stand.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EquipmentComponent = props => {\n  //mapStringToComponent\n  let eq;\n  switch (props.component) {\n    case \"Speaker\":\n      eq = Speaker;\n      break;\n    case \"Booth\":\n      eq = Booth;\n      break;\n    case \"SpeakerWithBass\":\n      eq = SpeakerWithBass;\n      break;\n    case \"MovingHead\":\n      eq = MovingHead;\n      break;\n    case \"Gigbar\":\n      eq = Gigbar;\n      break;\n    default:\n      eq = Speaker;\n  }\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    width: '100px',\n    src: eq\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = EquipmentComponent;\nexport default EquipmentComponent;\nvar _c;\n$RefreshReg$(_c, \"EquipmentComponent\");","map":{"version":3,"names":["React","Speaker","Booth","SpeakerWithBass","MovingHead","Gigbar","jsxDEV","_jsxDEV","EquipmentComponent","props","eq","component","width","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reuvenostrofsky/Downloads/sound-system/src/Components/EquipmentComponent.tsx"],"sourcesContent":["import React from 'react';\nimport Speaker from './SVG Files/Speaker + stand.svg';\nimport Booth from './SVG Files/Booth.svg';\nimport SpeakerWithBass from './SVG Files/Speaker + bass.svg';\nimport MovingHead from './SVG Files/Moving head.svg';\nimport Gigbar from './SVG Files/Gigbar with stand.svg';\n\nimport { FC } from 'react';\n\ntype allowedStrings = \"Speaker\" | \"Booth\" | 'SpeakerWithBass' | \"MovingHead\" | \"Gigbar\";\n\n\nconst EquipmentComponent:FC<{component: allowedStrings}> = (props) => {\n    //mapStringToComponent\n    let eq;\n    switch(props.component){\n        case \"Speaker\":\n            eq = Speaker;\n            break;\n        case \"Booth\":\n            eq = Booth;\n            break;\n        case \"SpeakerWithBass\":\n            eq = SpeakerWithBass;\n            break;\n        case \"MovingHead\":\n            eq = MovingHead;\n            break;\n        case \"Gigbar\":\n            eq = Gigbar;\n            break;\n        default:\n            eq = Speaker;\n\n    }\n\n    return (\n        <img width={'100px'} src={eq}/>\n    )\n\n\n    }\n\nexport default EquipmentComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,iCAAiC;AACrD,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,eAAe,MAAM,gCAAgC;AAC5D,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,MAAM,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvD,MAAMC,kBAAkD,GAAIC,KAAK,IAAK;EAClE;EACA,IAAIC,EAAE;EACN,QAAOD,KAAK,CAACE,SAAS;IAClB,KAAK,SAAS;MACVD,EAAE,GAAGT,OAAO;MACZ;IACJ,KAAK,OAAO;MACRS,EAAE,GAAGR,KAAK;MACV;IACJ,KAAK,iBAAiB;MAClBQ,EAAE,GAAGP,eAAe;MACpB;IACJ,KAAK,YAAY;MACbO,EAAE,GAAGN,UAAU;MACf;IACJ,KAAK,QAAQ;MACTM,EAAE,GAAGL,MAAM;MACX;IACJ;MACIK,EAAE,GAAGT,OAAO;EAEpB;EAEA,oBACIM,OAAA;IAAKK,KAAK,EAAE,OAAQ;IAACC,GAAG,EAAEH;EAAG;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAInC,CAAC;AAAAC,EAAA,GA7BCV,kBAAkD;AA+BxD,eAAeA,kBAAkB;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}