{"ast":null,"code":"var _jsxFileName = \"/Users/reuvenostrofsky/Downloads/sound-system/src/Components/CustomizableSelector/index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { FormControlLabel, Checkbox, Rating } from '@mui/material';\nimport { SpeakerGroup } from '@mui/icons-material';\nimport Card from '../PackageSelector/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomizableSelector = props => {\n  _s();\n  const initialEquipmentList = [{\n    id: 0,\n    name: 'Speaker',\n    icon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {\n      sx: {\n        color: 'white'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }, this),\n    emptyIcon: /*#__PURE__*/_jsxDEV(SpeakerGroup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 24\n    }, this),\n    min: 1,\n    max: 3,\n    checked: true,\n    quantity: 1\n  }\n  // ... (other equipment objects)\n  ];\n\n  const [equipmentList, setEquipmentList] = useState(initialEquipmentList);\n  const handleCheckboxChange = equipmentId => {\n    setEquipmentList(prevList => {\n      return prevList.map(equip => {\n        if (equip.id === equipmentId) {\n          return {\n            ...equip,\n            checked: !equip.checked,\n            quantity: equip.checked ? 0 : 1\n          };\n        }\n        return equip;\n      });\n    });\n  };\n  const handleRatingChange = (equipmentId, value) => {\n    setEquipmentList(prevList => {\n      return prevList.map(equip => {\n        if (equip.id === equipmentId) {\n          return {\n            ...equip,\n            quantity: value\n          };\n        }\n        return equip;\n      });\n    });\n  };\n  const onClickHandler = () => {\n    props.onClick(100);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isSelected: props.isSelected,\n    onClick: onClickHandler,\n    isCustomize: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: 'w-full text-center align-middle',\n      children: \"Customize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'p-3 flex-col overflow-scroll',\n      children: equipmentList.map(equipment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'flex items-center',\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: equipment.checked,\n            onChange: () => handleCheckboxChange(equipment.id),\n            sx: {\n              color: 'white',\n              '&.Mui-checked': {\n                color: 'white'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this),\n          name: equipment.name,\n          id: equipment.name,\n          label: equipment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Rating, {\n            value: equipment.checked ? equipment.quantity : 0,\n            onChange: (event, newValue) => handleRatingChange(equipment.id, newValue),\n            name: equipment.name,\n            max: equipment.max,\n            icon: equipment.icon,\n            emptyIcon: equipment.emptyIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, equipment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomizableSelector, \"OPWbDSFbT05BH/uaihv2aWcv/Y8=\");\n_c = CustomizableSelector;\nexport default CustomizableSelector;\nvar _c;\n$RefreshReg$(_c, \"CustomizableSelector\");","map":{"version":3,"names":["useState","FormControlLabel","Checkbox","Rating","SpeakerGroup","Card","jsxDEV","_jsxDEV","CustomizableSelector","props","_s","initialEquipmentList","id","name","icon","sx","color","fileName","_jsxFileName","lineNumber","columnNumber","emptyIcon","min","max","checked","quantity","equipmentList","setEquipmentList","handleCheckboxChange","equipmentId","prevList","map","equip","handleRatingChange","value","onClickHandler","onClick","isSelected","isCustomize","children","className","equipment","control","onChange","label","event","newValue","_c","$RefreshReg$"],"sources":["/Users/reuvenostrofsky/Downloads/sound-system/src/Components/CustomizableSelector/index.tsx"],"sourcesContent":["import { FC, useEffect, useState } from 'react';\nimport { FormControlLabel, Checkbox, Rating } from '@mui/material';\nimport { Speaker, SpeakerGroup, Light, Fluorescent } from '@mui/icons-material';\nimport Card from '../PackageSelector/Card';\n\ninterface Equipment {\n    id: number;\n    name: string;\n    icon: JSX.Element;\n    emptyIcon: JSX.Element;\n    min?: number;\n    max?: number;\n    checked: boolean;\n    quantity: number;\n}\n\nconst CustomizableSelector: FC<{ isSelected: boolean, onClick: (index: number) => void }> = (props) => {\n\n    const initialEquipmentList: Equipment[] = [\n        {\n            id: 0,\n            name: 'Speaker',\n            icon: <SpeakerGroup sx={{ color: 'white' }} />,\n            emptyIcon: <SpeakerGroup />,\n            min: 1,\n            max: 3,\n            checked: true,\n            quantity: 1,\n        },\n        // ... (other equipment objects)\n    ];\n\n    const [equipmentList, setEquipmentList] = useState(initialEquipmentList);\n\n    const handleCheckboxChange = (equipmentId: number) => {\n        setEquipmentList(prevList => {\n            return prevList.map(equip => {\n                if (equip.id === equipmentId) {\n                    return {\n                        ...equip,\n                        checked: !equip.checked,\n                        quantity: equip.checked ? 0 : 1\n                    };\n                }\n                return equip;\n            });\n        });\n    };\n\n    const handleRatingChange = (equipmentId: number, value: number) => {\n        setEquipmentList(prevList => {\n            return prevList.map(equip => {\n                if (equip.id === equipmentId) {\n                    return {\n                        ...equip,\n                        quantity: value\n                    };\n                }\n                return equip;\n            });\n        });\n    };\n\n    const onClickHandler = () => {\n        props.onClick(100);\n    };\n\n    return (\n        <Card isSelected={props.isSelected} onClick={onClickHandler} isCustomize={true}>\n            <h2 className={'w-full text-center align-middle'}>Customize</h2>\n            <div className={'p-3 flex-col overflow-scroll'}>\n                {equipmentList.map(equipment => (\n                    <div key={equipment.id} className={'flex items-center'}>\n                        <FormControlLabel\n                            control={\n                                <Checkbox\n                                    checked={equipment.checked}\n                                    onChange={() => handleCheckboxChange(equipment.id)}\n                                    sx={{\n                                        color: 'white',\n                                        '&.Mui-checked': {\n                                            color: 'white',\n                                        },\n                                    }}\n                                />\n                            }\n                            name={equipment.name}\n                            id={equipment.name}\n                            label={equipment.name}\n                        />\n                        <div>\n                            <Rating\n                                value={equipment.checked ? equipment.quantity : 0}\n                                onChange={(event, newValue) => handleRatingChange(equipment.id, newValue!)}\n                                name={equipment.name}\n                                max={equipment.max}\n                                icon={equipment.icon}\n                                emptyIcon={equipment.emptyIcon}\n                            />\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </Card>\n    );\n};\n\nexport default CustomizableSelector;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}